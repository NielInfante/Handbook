[
["intro.html", "Doing Bioinformatics at WVU Chapter 1 Introduction", " Doing Bioinformatics at WVU Niel Infante 2019-01-29 Chapter 1 Introduction Welcome to the Wild and Wonderful world of Bioinformatics. Having control of your data, and knowing how to manipulate and mine it, is the only way you can get to what you really want to know. Learning how to access your data, filter it, and combine it with other data will allow you to bring your subject area expertise to bear, and will open up insights into your system. You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter 1. If you do not manually label them, there will be automatic labels anyway, e.g., Chapter ??. Figures and tables with captions will be placed in figure and table environments, respectively. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 1.1: Here is a nice figure! Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure 1.1. Similarly, you can reference tables generated from knitr::kable(), e.g., see Table 1.1. knitr::kable( head(iris, 20), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 1.1: Here is a nice table! Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 5.4 3.9 1.7 0.4 setosa 4.6 3.4 1.4 0.3 setosa 5.0 3.4 1.5 0.2 setosa 4.4 2.9 1.4 0.2 setosa 4.9 3.1 1.5 0.1 setosa 5.4 3.7 1.5 0.2 setosa 4.8 3.4 1.6 0.2 setosa 4.8 3.0 1.4 0.1 setosa 4.3 3.0 1.1 0.1 setosa 5.8 4.0 1.2 0.2 setosa 5.7 4.4 1.5 0.4 setosa 5.4 3.9 1.3 0.4 setosa 5.1 3.5 1.4 0.3 setosa 5.7 3.8 1.7 0.3 setosa 5.1 3.8 1.5 0.3 setosa You can write citations, too. For example, we are using the bookdown package (Xie 2018) in this sample book, which was built on top of R Markdown and knitr (Xie 2015). References "],
["start.html", "Chapter 2 Getting Started 2.1 Operating Systems 2.2 Text Editor", " Chapter 2 Getting Started Help on picking an operating system and installing basic tools. 2.1 Operating Systems 2.1.1 Windows Though disparaged by most professional Bioinformaticians, you can still do a lot with Windows. Most commercial GUIs run on Windows. Web based applications are generally system agnostic, though many run better in Chrome or Firefox. A Downside to Windows is that it greatly restricts the programs you can run. Almost all Bioinformatics tools are designed on and for the Linux command line. Plus there are numerous command line tools that allow you multiple ways to access your data. On Windows 10, you can actually install Linux as an application. Directions for doing so can be found here. A hugely important tool in Bioinformatics is R. You should install R and R Studio. You can also use Windows to connect to the HPC, or some other Linux server. There are multiple applications for this, a recommended one is MobaXterm. If you are doing work directly on your Windows machine, you should also install git. You can do this either by installing git bash, or by installing MobaXterm and then adding a git plugin. 2.1.2 Mac OS Apple’s operating system is built on top of Linux, so the command line is as easy as opening a terminal. However, the terminal doesn’t support X11 forwarding. This means if you use the terminal to connect to a Linux server like the HPC, you wont be able to see any graphics. To get around this, install XQuartz and use that as your terminal. Its a little harder to visually customize XQuartz, but a guide is here… A hugely important tool in Bioinformatics is R. You should install R and R Studio. 2.1.3 Linux Awesome, you’re pretty much good to go. A hugely important tool in Bioinformatics is R. You should install R and R Studio. 2.1.4 HPC WVU has a High Performance Cluster open to all WVU community members. To use the hpc, you will need an account; information on obtaining an account is here. More information about using the hpc can be found here, or in Chapter 2.1.4. 2.2 Text Editor You’re going to need a text editor, for programming, editing metadata files, and occasionally looking at data files. Please note, WORD IS NOT A TEXT EDITOR. Word processors will add a lot of other things to the file besides the plain text. These extra things will choke any other program that tries to read the file. On Windows, also avoid notepad. You can do much better. “What’s the best text editor?” can bring out some strong opinions. The Emacs vs vi religious wars are legendary. Built into most Linux system are Emacs and vi (or vim), and nano. Nano is the simplest, but does the least. The others can do much more, but are confusing for beginners. It is good to know at least a few vi basics, as it will be on any Linux system you encounter. However, unless you really want to go old school hard core, I would suggest a more modern editor. Sublime and Atom are widely used, amazingly powerful, and available on all platforms. Other favorites include Notepad++ (Windows) and BBEdit (Mac). "],
["project.html", "Chapter 3 Project Management", " Chapter 3 Project Management here are many variants on this design, feel free to modify to suit your needs. However, the basic structure of what will be presented will help you in the long run. Each project should have its own directory. Note I will use directory and folder interchangeably. Your project directory should contain a README file, which explains the purpose of the project, and what you have done. Within the directory, there should be multiple sub folders. First is data, where you will store the raw data for the project. The data in this folder should never be written to or modified. I also will have a reference directory, where I will store the reference genome, transcriptome, or other data obtained from external databases. It is good to store this data with the project, so that you can be assured you will always have access to the same version of the data. This may not be practical for large databases (eg blast nr), so take care to note database versions in your scripts. You should have a folder, traditionally called src, which contains all the scripts and source code you write for the project. All external software should be installed in a folder called bin. More on this in Chapter 6. For each analysis you do, or each tool you run, there should be an output directory for it which contains all the output from the analysis. It may be useful to further subdivide each of these folders into more subfolders, with different sorts of data. Also in this top level directory you should have you .git folder. This will be generated when you use git (Chapter 5). Note that all you really want under version control is the README and the src directory. There are no versions for the raw data, and all the derived data should be coming directly from a script. Describe Folder layout, nameing conventions, other things from good enough practices. link to that too. "],
["container.html", "Chapter 4 Containers 4.1 Example one 4.2 Example two", " Chapter 4 Containers Some significant applications are demonstrated in this chapter. 4.1 Example one 4.2 Example two "],
["git.html", "Chapter 5 Git and GitHub", " Chapter 5 Git and GitHub We have finished a nice book. "],
["software.html", "Chapter 6 Software", " Chapter 6 Software "],
["version.html", "Chapter 7 Version Tracking", " Chapter 7 Version Tracking "],
["pipeline.html", "Chapter 8 Pipelines", " Chapter 8 Pipelines Here we present some of the workflows we commonly use. Note that you will have to make some modifications to get them to run on your setup, at the very least changing paths. Also note the date a workflow was last updated. Bioinformatics changes rapidly, and new tools and methods are constantly being developed. RNA-seq September 2018 RNA-seq without a reference September 2018 16S Microbiome September 2018 Variant Finding September 2018 ChIP-seq September 2018 "],
["documentation-documentation.html", "Chapter 9 Documentation ${documentation}", " Chapter 9 Documentation ${documentation} "],
["using-the-hpc-hpc.html", "Chapter 10 Using the HPC #{hpc}", " Chapter 10 Using the HPC #{hpc} "],
["assessing-new-tools-tools.html", "Chapter 11 Assessing New Tools ${tools}", " Chapter 11 Assessing New Tools ${tools} How to determine if you should adopt a new tool. "],
["writing-about-bioinformatics-writting.html", "Chapter 12 Writing About Bioinformatics #{writting}", " Chapter 12 Writing About Bioinformatics #{writting} How to write methods sections. "]
]
